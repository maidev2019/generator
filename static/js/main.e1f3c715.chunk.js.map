{"version":3,"sources":["mapp4.js","strId.js","App.js","reportWebVitals.js","index.js"],"names":["chance","require","iso_abbreviations","Croatia","Denmark","Germany","Greece","Ireland","Italy","Luxembourg","Netherlands","Switzerland","Turkey","UK","country_length","letter_map","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","character_countries","Greek_sort","Croatia_sort","num_gen3","span","string","length","pool","calcChecksum","countryCode","randomPart","checkString","conv_string","i","conv_char","IBAN_conv","replace","toString","replaceChars","bankAccountKey","buildIbans","country_input","ISO","IBAN_length","middle_characters","interIBAN","_","sample","numeric_part","Italy_map","yy","xx","Number","charAt","j","jj","numeric_suffix","getRandomElement","arr","Math","floor","random","shuffle","remove","n","pop","getFirstTenDigits","digits","push","e","trippleElement","shift","calcCheckDigit","prod","sum","check","createSteuerIdDigits","taxID","checkThreeDigistAreInRow","getIndexoffThreeDigitsInRow","replaceAll","checkFirstDigitIsNotZero","s","threeInRow","faceCount","forEach","x","element","item","index","indexOfThrees","String","prototype","deb","rst","str","this","substr","gm","crypto","countriesForUmsatzID","value","label","countriesForIBAN","buildUSTID","country","countryEntry","find","obj","num","slice","App","props","newIban","sha256Iban","createHash","update","digest","state","iban","taxIDNumber","bundesland","taxNumber","generate","ustIDCountry","ustID","shaIban","bundeslandHandlerTaxNum","bind","handleSubmitTaxNum","handleSubmitTaxID","countryHandler","handleSubmitIBAN","generateAllValues","handleSubmitUstID","handleOnChangeUstID","bl","target","stnr","setState","preventDefault","sha256_hash","console","log","className","type","disabled","name","onChange","map","option","onClick","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1f3c715.chunk.js","sourcesContent":["// If you can get ahold of this, it is free to use.\r\nimport _ from 'lodash';\r\nvar Chance = require('chance');\r\n\r\n// Instantiate Chance so it can be used\r\nvar chance = new Chance();\r\n\r\n//JSONs\r\nvar iso_abbreviations = {Croatia:\"HR\", Denmark:\"DK\", Germany:\"DE\",Greece:\"GR\", Ireland:\"IE\", Italy:\"IT\",  Luxembourg:\"LU\",  Netherlands:\"NL\", Switzerland:\"CH\", Turkey:\"TR\", UK:\"GB\", };\r\nvar country_length = {Croatia:21, Denmark:18, Germany:22, Greece:27, Ireland:22, Italy:27, Luxembourg:20, Netherlands:18, Switzerland:21, Turkey:26, UK:22, };\r\nvar letter_map = {A:10, B:11, C:12, D:13, E:14, F:15, G:16, H:17, I:18, J:19, K:20, L:21, M:22, N:23, O:24, P:25, Q:26, R:27, S:28, T:29, U:30, V:31, W:32, X:33, Y:34, Z:35};\r\nvar character_countries = {Croatia:0, Denmark:0, Germany:0, Greece:0, Ireland:4, Italy:1, Luxembourg:0, Netherlands:4, Switzerland:0, Turkey:0, UK:4, }\r\n\r\n\r\n// Arrays\r\nvar Greek_sort = [\"010\", \"011\", \"014\", \"017\"]\r\nvar Croatia_sort = [\"2340009\", \"2500009\", \"2402006\", \"2360000\", \"2484008\"]\r\n\r\nfunction num_gen3(span) {\r\n\tvar num2 = chance.string({length: span, pool: '123456789'});\r\n\treturn num2;\r\n}\r\n\r\n\r\nfunction char_gen(span) {\r\n\tvar char2 = chance.string({length: span, pool: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'})\r\n\treturn char2;\r\n}\r\n\r\nString.prototype.bankAccountKey=function() {\r\n\tvar str = this.toString(),deb,rst;\r\n\twhile (deb=str.substr(0,12),str=str.substr(12)) {str=(deb%97).toString()+str;}\r\n\trst=98-deb%97;\r\n\treturn rst<10?'0'+rst:''+rst;\r\n}\r\n\r\nfunction replaceChars(conv_string) {\r\n\tfor(var i = 0; i < conv_string.length; i++) {\r\n\t\tvar conv_char = conv_string[i];\r\n\t\tif(conv_char in letter_map) {\r\n\t\t\tvar IBAN_conv = letter_map[conv_char];\r\n\t\t\tconv_string = conv_string.replace(conv_char, IBAN_conv.toString());\r\n\t\t}\r\n\t}\r\n\treturn conv_string;\r\n}\r\n\r\n\r\n\r\nfunction calcChecksum(countryCode, randomPart) {\r\n\tvar checkString = randomPart + countryCode + \"00\";\r\n\tcheckString = replaceChars(checkString);\r\n\tvar checksum = checkString.bankAccountKey();\r\n\t\r\n\treturn countryCode + checksum.toString() + randomPart;\r\n}\r\n\r\nexport function buildIbans(country_input) {\r\n  var ISO = iso_abbreviations[country_input];\r\n  var IBAN_length = country_length[country_input];\r\n  var middle_characters = character_countries[country_input];\r\n  switch(country_input) {\r\n   \r\n  case \"Switzerland\":\r\n\t\tvar CH_numeric_suffix = IBAN_length - 9;\r\n\t\tvar CH_really = \"89144\" + num_gen3(CH_numeric_suffix);\r\n\t\tvar CH_IBAN = calcChecksum(ISO, CH_really);\r\n\t\treturn CH_IBAN;\r\n\r\n  case \"Greece\":\r\n\t\tvar GR_numeric_part = _.sample(Greek_sort) + num_gen3(IBAN_length - 7);\r\n\t\tvar interIBAN = calcChecksum(ISO, GR_numeric_part);\r\n\t\treturn interIBAN;\r\n\r\n  case \"Germany\":\r\n\t\tvar DE_randomPart = \"50010517\" + num_gen3(IBAN_length - 12);\r\n\t\tvar DE_IBAN = calcChecksum(ISO, DE_randomPart);\r\n\t\treturn DE_IBAN;\r\n\t\t// Method C1, Variant 2, Account 5559749181, Bank Code 50010517, Check digit 1 is at position 10, expected check digit: 1. Overview of the calculation: Take the digits in positions 1 to 9 - here: 555974918 -, Multiply them from the left to the right by the weights 1,2,1,2,1,2,1,2,1, add the transverse sums of the products, form the remainder of the division by 11, subtract the result from 10, Result modulo 11 is the expected reference number.\r\n  case \"Denmark\":\r\n\t\tvar DK_randomPart = \"5051\" + num_gen3(IBAN_length - 8);\r\n\t\tvar DK_IBAN = calcChecksum(ISO, DK_randomPart);\r\n\t\treturn DK_IBAN;\r\n\r\n  case \"Italy\":\r\n\t\tvar numeric_part = \"0300203280\" + num_gen3(IBAN_length - 15);\r\n\t\tvar Italy_map = {0:\"1\", 1:\"0\", 2:\"5\", 3:\"7\", 4:\"9\", 5:\"13\", 6:\"15\", 7:\"17\", 8:\"19\", 9:\"21\"}\r\n\t\tvar Italy_CIN = {0:\"A\", 1:\"B\", 2:\"C\", 3:\"D\", 4:\"E\", 5:\"F\", 6:\"G\", 7:\"H\", 8:\"I\", 9:\"J\", 10:\"K\", 11:\"L\", 12:\"M\", 13:\"N\", 14:\"O\", 15:\"P\", 16:\"Q\", 17:\"R\", 18:\"S\", 19:\"T\", 20:\"U\", 21:\"V\", 22:\"W\", 23:\"X\", 24:\"Y\", 25:\"Z\"}\r\n\t\tvar yy = 0;\r\n\t\tvar xx = 0;\r\n\t\tfor(var i = 1; i < 22; i += 2) {\r\n\t\t\tyy +=  Number(numeric_part.charAt(i));\r\n\r\n\t\t}\r\n\t\tfor(var j = 0; j < 22; j += 2) {\r\n\t\t\tvar jj = Number(numeric_part.charAt(j));\r\n\t\t\tvar ii = Italy_map[jj];\r\n\t\t\txx += Number(ii);\r\n\t\t}\r\n\t\tvar uu = xx + yy;\r\n\t\tvar ll = uu % 26;\r\n\t\tvar kk = Italy_CIN[ll];\r\n\t\tvar randomPart = kk + numeric_part;\r\n\t\tinterIBAN = calcChecksum(ISO, randomPart);\r\n\t\treturn interIBAN;\r\n\r\n  case \"Luxembourg\":\r\n\t\tvar LX_numeric_part = \"010\" + num_gen3(IBAN_length - 7);\r\n\t\tvar LX_IBAN = calcChecksum(ISO, LX_numeric_part);\r\n\t\treturn LX_IBAN;\r\n\r\n \r\n  case \"Ireland\":\r\n\t\tvar IR_numeric_part =  num_gen3(IBAN_length - 16);\r\n\t\tvar IR_randomPart = \"BOFI900017\" + IR_numeric_part;\r\n\t\tvar IR_IBAN = calcChecksum(ISO, IR_randomPart);\r\n\t\treturn IR_IBAN;\r\n\r\n  \r\n  case \"Croatia\":\r\n\t\tvar CRT_numeric_part = _.sample(Croatia_sort) + num_gen3(IBAN_length - 11);\r\n\t\tvar CRT_IBAN = calcChecksum(ISO, CRT_numeric_part);\r\n\t\treturn CRT_IBAN;\r\n\r\n  case \"Turkey\":\r\n\t\tvar TR_numeric_part = \"00062\" + num_gen3(IBAN_length - 9);\r\n\t\tvar TR_IBAN = calcChecksum(ISO, TR_numeric_part);\r\n\t\treturn TR_IBAN;\r\n\r\n  default:\r\n    ISO = iso_abbreviations[country_input];\r\n\tIBAN_length = country_length[country_input];\r\n\tmiddle_characters = character_countries[country_input];\r\n\tvar numeric_suffix = Number(IBAN_length - 4 - middle_characters);\r\n\t\r\n\tvar BIC = char_gen(middle_characters);\r\n\trandomPart = BIC + num_gen3(numeric_suffix) + \"\";\r\n\t\r\n\treturn calcChecksum(ISO, randomPart);\r\n  }\r\n}\r\n\r\n","function getRandomElement(arr) {\r\n    const i = Math.floor(Math.random() * arr.length);\r\n    return arr[i];\r\n}\r\n\r\nfunction doubleElement(arr) {\r\n    arr.push(getRandomElement(arr));\r\n}\r\n\r\nfunction trippleElement(arr) {\r\n    const e = getRandomElement(arr);\r\n    arr.push(e, e);\r\n}\r\n\r\nfunction shuffle(arr) {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n}\r\n\r\nfunction remove(arr, n) {\r\n    for (let i = 0; i < n; i++) {\r\n        arr.pop();\r\n    }\r\n}\r\n\r\nfunction getFirstTenDigits() {\r\n    const digits = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        digits.push(i);\r\n    }\r\n\r\n    shuffle(digits);\r\n\r\n    if (Math.random() > 0.5) {\r\n        remove(digits, 1);\r\n        doubleElement(digits);\r\n    } else {\r\n        remove(digits, 2);\r\n        trippleElement(digits);\r\n    }\r\n\r\n    shuffle(digits);\r\n\r\n    // the first digit must not be 0\r\n    if (digits[0] === 0) {\r\n        digits.push(digits.shift())\r\n    }\r\n\r\n\r\n    return digits;\r\n}\r\n\r\nfunction calcCheckDigit(digits) {\r\n    let prod = 0;\r\n    for (let i = 0; i < digits.length; i++) {\r\n        let sum = (digits[i] + prod) % 10;\r\n        if (sum === 0) {\r\n            sum = 10;\r\n        }\r\n        prod = (sum * 2) % 11;\r\n    }\r\n    let check = 11 - prod;\r\n    if (check === 10) {\r\n        check = 0;\r\n    }\r\n    return check;\r\n}\r\n\r\nexport function createSteuerIdDigits() {\r\n\r\n    var digits = getFirstTenDigits();\r\n    digits.push(calcCheckDigit(digits));\r\n    var s = getIndexoffThreeDigitsInRow(digits);\r\n    var taxID = checkThreeDigistAreInRow(s, digits).toString().replaceAll(',','');\r\n    taxID = checkFirstDigitIsNotZero(taxID);\r\n    return taxID;\r\n}\r\nfunction checkFirstDigitIsNotZero(digits) {\r\n    var  taxID = digits;\r\n    while(taxID[0] === '0'){        \r\n        digits = getFirstTenDigits();\r\n        digits.push(calcCheckDigit(digits));\r\n        var s = getIndexoffThreeDigitsInRow(digits);\r\n        taxID = checkThreeDigistAreInRow(s, digits).toString().replaceAll(',','');\r\n    }\r\n    return taxID; \r\n}\r\n\r\nfunction checkThreeDigistAreInRow(s, digits) {\r\n    var threeInRow = false;\r\n    if (s !== -1 && digits[s] === digits[s - 1] && digits[s - 1] === digits[s - 2]) {\r\n        threeInRow = true;\r\n    } else {\r\n        threeInRow = false;\r\n    }\r\n    while (threeInRow === true) {\r\n        threeInRow = false;\r\n        digits = getFirstTenDigits();\r\n        digits.push(calcCheckDigit(digits));\r\n        s = getIndexoffThreeDigitsInRow(digits);\r\n        if (s !== -1 && digits[s] === digits[s + 1] && digits[s + 1] === digits[s + 2]) {\r\n            threeInRow = true;\r\n        } else {\r\n            threeInRow = false;\r\n        }\r\n    } \r\n    return digits;\r\n}\r\n\r\nfunction getIndexoffThreeDigitsInRow(digits){\r\n    var faceCount = [0,0,0,0,0,0,0,0,0,0];\r\n    digits.forEach(x => {\r\n        faceCount[x]++;        \r\n    });\r\n   \r\n    var element = -1\r\n    faceCount.forEach(function(item, index){\r\n        if(item ===  3){\r\n            element = index;            \r\n        }       \r\n    });\r\n    var indexOfThrees = -1;\r\n    digits.forEach(function(item, index){\r\n        if(item === element){\r\n            indexOfThrees = index;            \r\n        }        \r\n    });   \r\n    return indexOfThrees;\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { buildIbans } from './mapp4';\r\nimport { createSteuerIdDigits } from './strId';\r\n\r\nconst gm = require('avris-generator');\r\nconst crypto = require('crypto');\r\n\r\nvar countriesForUmsatzID = [\r\n  { value: 'HR', label: 'Kroatien' },\r\n  { value: 'DK', label: 'Dänemark' },\r\n  { value: 'FR', label: 'Frankreich' },\r\n  { value: 'DE', label: 'Deutschland' },\r\n  { value: 'IE', label: 'Ireland' },\r\n  { value: 'IT', label: 'Italien' },\r\n  { value: 'LU', label: 'Luxemburg' },\r\n  { value: 'NL', label: 'Niederland' },\r\n];\r\n\r\nvar countriesForIBAN = [\r\n  { value: 'Croatia', label: 'Kroatien' },\r\n  { value: 'Denmark', label: 'Dänemark' },\r\n  { value: 'Germany', label: 'Deutschland' },\r\n  { value: 'Greece', label: 'Griechenland' },\r\n  { value: 'Ireland', label: 'Ireland' },\r\n  { value: 'Italy', label: 'Italien' },\r\n  { value: 'Luxembourg', label: 'Luxemburg' },\r\n  { value: 'Switzerland', label: 'Schweiz' },\r\n  { value: 'Turkey', label: 'Türkei' },\r\n];\r\n\r\nfunction buildUSTID(country) {\r\n  const countryEntry = countriesForUmsatzID.find(obj => obj.label === country);\r\n  var num = Math.random().toString().slice(2,11);\r\n  while(num.toString().length < 9 || num.toString().charAt(0) === '0'){\r\n    num =  Math.random().toString().slice(2,11);\r\n  }\r\n  \r\n  \r\n  const vatId= countryEntry.value + num;\r\n  return vatId;\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const newIban = buildIbans('Germany');\r\n    const sha256Iban = crypto.createHash('sha256').update(newIban).digest('hex')\r\n    this.state = {\r\n      country: 'Germany',\r\n      iban: newIban,\r\n      taxIDNumber: createSteuerIdDigits(),\r\n      bundesland: 'Alle Bundesländer',\r\n      taxNumber: gm.generate('DE', 'stnr'),\r\n      ustIDCountry: 'Deutschland',\r\n      ustID: buildUSTID('Deutschland'),\r\n      shaIban: sha256Iban,\r\n    };\r\n\r\n    this.bundeslandHandlerTaxNum = this.bundeslandHandlerTaxNum.bind(this);\r\n    this.handleSubmitTaxNum = this.handleSubmitTaxNum.bind(this);\r\n    this.handleSubmitTaxID = this.handleSubmitTaxID.bind(this);\r\n    this.countryHandler = this.countryHandler.bind(this);\r\n    this.handleSubmitIBAN = this.handleSubmitIBAN.bind(this);\r\n    this.generateAllValues = this.generateAllValues.bind(this);\r\n    this.handleSubmitUstID = this.handleSubmitUstID.bind(this);\r\n    this.handleOnChangeUstID = this.handleOnChangeUstID.bind(this);\r\n  }\r\n  \r\n  bundeslandHandlerTaxNum(e) {\r\n    const bl = e.target.value === \"all\" ? 'Alle Bundesländer' : e.target.value\r\n    const stnr = bl === 'Alle Bundesländer' ? gm.generate('DE', 'stnr') : gm.generate('DE', 'stnr', { state: bl });\r\n    this.setState({ bundesland: bl , taxNumber: stnr});\r\n    e.preventDefault();\r\n  };\r\n  handleSubmitTaxNum(e) {\r\n    var bl = this.state.bundesland;\r\n    const stnr = bl === 'Alle Bundesländer' ? gm.generate('DE', 'stnr') : gm.generate('DE', 'stnr', { state: bl });\r\n    this.setState({ taxNumber: stnr });\r\n    e.preventDefault();\r\n  }\r\n  handleSubmitTaxID(e) {\r\n    this.setState({ taxIDNumber: createSteuerIdDigits() });\r\n    e.preventDefault();\r\n  }\r\n\r\n  countryHandler(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const newIban = buildIbans(value);\r\n    const sha256_hash =  crypto.createHash('sha256').update(newIban).digest('hex');\r\n    this.setState({\r\n      country: value,\r\n      iban: newIban,\r\n      shaIban : sha256_hash,\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleSubmitIBAN(e) {\r\n    const newIban = buildIbans(this.state.country)\r\n    const sha256_hash =  crypto.createHash('sha256').update(newIban).digest('hex');\r\n    this.setState({\r\n      iban: newIban,\r\n      shaIban: sha256_hash,\r\n    });\r\n    e.preventDefault();\r\n  }\r\n\r\n  generateAllValues(e) {\r\n    var bl = this.state.bundesland;\r\n    const stnr = bl === 'Alle Bundesländer' ? gm.generate('DE', 'stnr') : gm.generate('DE', 'stnr', { state: bl });\r\n    const num = buildUSTID(this.state.ustIDCountry);\r\n    const newIban = buildIbans(this.state.country)\r\n    const sha256_hash =  crypto.createHash('sha256').update(newIban).digest('hex');\r\n    console.log(\"sha256_hash\", sha256_hash);\r\n    this.setState({\r\n      taxIDNumber: createSteuerIdDigits(),\r\n      taxNumber: stnr,\r\n      iban: newIban,\r\n      ustID: num,\r\n      shaIban: sha256_hash\r\n    });\r\n\r\n  }\r\n\r\n  handleOnChangeUstID(e) {\r\n    const num = buildUSTID(e.target.value);\r\n    \r\n    this.setState({\r\n      ustID: num,\r\n      ustIDCountry: e.target.value\r\n    });\r\n    e.preventDefault();\r\n  }\r\n  handleSubmitUstID(e) {\r\n\r\n    const num = buildUSTID(this.state.ustIDCountry);\r\n    this.setState({\r\n      ustID: num,\r\n    });\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header >\r\n          <h1>Generator for VAT ID, Tax ID, Tax Number and IBAN </h1>\r\n        </header>\r\n\r\n        <div>\r\n\r\n          <form>\r\n            <label className=\"label\">VAT ID: &#160;</label>\r\n            <input type=\"text\" className=\"todo-input\" disabled value={this.state.ustID} />\r\n            <p>&#160;</p>\r\n            <div className=\"select\">\r\n\r\n              <select value={this.state.ustIDCountry} className=\"filter-todo\" name=\"ustid\" onChange={this.handleOnChangeUstID}>\r\n                {countriesForUmsatzID.map((option) => (\r\n                  <option key={option.value} value={option.label}>{option.label}</option>\r\n                ))}\r\n              </select>\r\n\r\n            </div>\r\n            <button onClick={this.handleSubmitUstID} className=\"todo-button\">\r\n              <i className=\"fas fa-random\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"mybutton\">\r\n\r\n          </div>\r\n          <form>\r\n            <label className=\"label\">Tax ID: &#160;</label>\r\n            <input type=\"text\" className=\"inputResize\" disabled value={this.state.taxIDNumber} />\r\n            <p>&#160;</p>\r\n            <button onClick={this.handleSubmitTaxID} className=\"todo-button\">\r\n              <i className=\"fas fa-random\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n\r\n          <form>\r\n            <label className=\"label\">Tax Nr: &#160;</label>\r\n            <input type=\"text\" className=\"todo-input\" disabled value={this.state.taxNumber} />\r\n            <div className=\"select\">\r\n              <select name=\"state\" onChange={this.bundeslandHandlerTaxNum} className=\"filter-todo\">\r\n                <option key=\"0\" value=\"all\">Alle Bundesländer</option>\r\n                <option key=\"1\" value=\"BW\">Baden-Württemberg</option>\r\n                <option key=\"2\" value=\"BY\">Bayern</option>\r\n                <option key=\"3\" value=\"BE\">Berlin</option>\r\n                <option key=\"4\" value=\"BB\">Brandenburg</option>\r\n                <option key=\"5\" value=\"HB\">Bremen</option>\r\n                <option key=\"6\" value=\"HH\">Hamburg</option>\r\n                <option key=\"7\" value=\"HE\">Hessen</option>\r\n                <option key=\"8\" value=\"MV\">Mecklenburg-Vorponnern</option>\r\n                <option key=\"9\" value=\"NI\">Niedersachsen</option>\r\n                <option key=\"10\" value=\"NW\">Nordrhein-Westfalen</option>\r\n                <option key=\"11\" value=\"RP\">Rheinland-Pfalz</option>\r\n                <option key=\"12\" value=\"SL\">Saarland</option>\r\n                <option key=\"13\" value=\"SN\">Sachsen</option>\r\n                <option key=\"14\" value=\"ST\">Sachsen-Anhalt</option>\r\n                <option key=\"15\" value=\"SH\">Schleswig-Holstein</option>\r\n                <option key=\"16\" value=\"TH\">Thüringen</option>\r\n              </select>\r\n            </div>\r\n\r\n            <button onClick={this.handleSubmitTaxNum} className=\"todo-button\">\r\n              <i className=\"fas fa-random\"></i>\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n\r\n        <div>\r\n          <form>\r\n            <label className=\"label\">Ibans : &#160;</label>\r\n            <input type=\"text\" className=\"todo-input\" disabled value={this.state.iban} />\r\n            <div className=\"select\">\r\n\r\n              <select value={this.state.country} className=\"filter-todo\" name=\"iban\" onChange={this.countryHandler}>\r\n                {countriesForIBAN.map((option) => (\r\n                  <option key={option.value} value={option.value}>{option.label}</option>\r\n                ))}\r\n              </select>\r\n\r\n            </div>\r\n            <button onClick={this.handleSubmitIBAN} className=\"todo-button\">\r\n              <i className=\"fas fa-random\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <center>\r\n            <label className=\"label\">SHA256 hash code for iban : &#160;</label>\r\n          </center>\r\n          <form>\r\n            \r\n            <input type=\"text\" className=\"label_SHA\" disabled value={this.state.shaIban} />\r\n            \r\n          </form>\r\n        </div>\r\n\r\n\r\n        <center>\r\n          <div>\r\n            <button  id=\"generatorAll\" onClick={this.generateAllValues} className=\"buttontest\">\r\n            <i className=\"fas fa-random\"></i> Generate \r\n            </button>\r\n          </div>\r\n          \r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}